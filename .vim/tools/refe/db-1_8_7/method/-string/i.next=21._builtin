names=next!,succ!
visibility=public
kind=defined

--- succ! -> String
--- next! -> String

self を「次の」文字列に置き換えます。
「次の」文字列は、アルファベットなら 16 進数、
数字なら 10 進数とみなして計算されます。
「次の」文字列の計算では "99" → "100" のように繰り上げも行われます。
このとき負符号などは考慮されません。

self にアルファベットや数字とそれ以外の文字が混在している場合、
アルファベットと数字だけが「次の」文字になり、残りは保存されます。
逆に self がアルファベットや数字をまったく含まない場合は、
単純に文字コードを 1 増やします。

さらに、self が空文字列の場合は "" を返します。

このメソッドはマルチバイト文字を意識せず、
単に文字列をバイト列として扱います。

なお、succ! と逆の動作をするメソッドはありません。

例:
    p "aa".succ   # => "ab"

    # 繰り上がり
    p "99".succ   # => "100"
    p "a9".succ   # => "b0"
    p "Az".succ   # => "Ba"
    p "zz".succ   # => "aaa"
    p "-9".succ   # => "-10"
    p "9".succ    # => "10"
    p "09".succ   # => "10"

    # アルファベット・数字とそれ以外の混在
    p "1.9.9".succ # => # "2.0.0"

    # アルファベット・数字以外のみ
    p ".".succ     # => "/"
    p "\0".succ    # => "\001"
    p "\377".succ  # => "\001\000"

@see [[m:String#succ]]

