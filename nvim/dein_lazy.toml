# Unite {{{
# ---------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'Shougo/unite.vim'
on_cmd = ['Unite']
if = 'g:is_nvim == 0'
hook_add = '''
nnoremap [unite] <nop>
xnoremap [unite] <nop>
nmap <Space> [unite]
xmap <Space> [unite]

nnoremap [unite]  :Unite
nnoremap [unite]b :Unite buffer<CR>
nnoremap [unite]t :Unite tab<CR>
nnoremap [unite]w :Unite window<CR>
nnoremap [unite]g :Unite grep<CR>
'''

[[plugins]]
repo = 'osyo-manga/unite-quickfix'
on_source = ['unite.vim']

[[plugins]]
repo = 'osyo-manga/unite-quickrun_config'
on_source = ['unite.vim']
hook_add = '''
nnoremap [unite]qc :Unite quickrun_config<CR>
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['unite.vim']
hook_add = '''
let g:neomru#time_format = "%Y/%m/%d %H:%M:%S"

nnoremap [unite]h :<C-u>execute
    \ 'Unite'
    \ 'buffer file_mru'
    \ 'file:'.fnameescape(expand('%:p:h'))
    \ 'file_rec:!:'.fnameescape(expand('%:p:h'))
    \ <CR>
'''
# }}}

# Syntax {{{
# ---------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['md', 'markdown']

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'vim-scripts/ShaderHighLight'
on_ft = ['shaderlab', 'cg', 'glsl', 'hlsl']

[[plugins]]
repo = 'osyo-manga/vim-precious'
on_ft = ['md', 'markdown', 'toml', 'vim', 'html']
hook_add = '''
augroup vim-precious
	autocmd!
	autocmd User PreciousFileType :echo precious#context_filetype()
augroup END
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
on_source = ['vim-precious']
hook_add = '''
let g:context_filetype#search_offset = 300
'''

# }}}

# C / C++ {{{
# ---------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'vim-scripts/a.vim'
on_ft = ['c', 'cpp']
hook_source = '''
nmap <silent> <C-t> :A<CR>
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp']
hook_add = '''
nmap [prefix]cf <Plug>(operator-clang-format)
vmap [prefix]cf <Plug>(operator-clang-format)
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']
# }}}

# Format {{{
# ---------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'h1mesuke/vim-alignta'
on_cmd = ['Alignta']
hook_add = '''
vnoremap a  :Alignta
vnoremap a= :Alignta =<CR>
vnoremap a+ :Alignta +<CR>
vnoremap a: :Alignta 11 :/1<CR>
vnoremap a; :Alignta 11 :/1<CR>
vnoremap a, :Alignta 01 ,<CR>
vnoremap as :Alignta <<0 \s\s*<CR>
vnoremap ae :Alignta -e
vnoremap ar :Alignta -r
vnoremap ap :Alignta -p
vnoremap ag :Alignta g/^\s*
vnoremap av :Alignta v/^\s*
'''
# }}}

# Others {{{
# ---------------------------------------------------------------------------------------------------
[[plugins]]
repo = 'glidenote/memolist.vim'
on_cmd = ['MemoNew', 'MemoList', 'MemoGrep']
hook_add = '''
" map
nnoremap <silent> [prefix]mn :set noimdisable<CR>:MemoNew<CR>
nnoremap <silent> [prefix]ml :MemoList<CR>
nnoremap <silent> [prefix]mg :MemoGrep<CR>

" parameters
let g:memolist_path              = '~/Memo'
let g:memolist_memo_suffix       = 'txt'
let g:memolist_memo_date         = '%Y-%m-%d %H:%M'
let g:memolist_prompt_tags       = 0
let g:memolist_prompt_categories = 0
let g:memolist_qfixgrep          = 1
let g:memolist_vimfiler          = 1
let g:memolist_template_dir_path = g:nvim_dir . '/template/memolist'

augroup MemoSetFileType
    autocmd!
    autocmd BufNewFile,BufRead *.txt set filetype=memo
augroup END
'''
# }}}
